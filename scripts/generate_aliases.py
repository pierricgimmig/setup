"""
Script to create alias scripts for commonly used commands.
"""

import os
import yaml

LAUNCH_URL = "start" if os.name == "nt" else "xdg-open"
SCRIPT_EXT = ".bat" if os.name == "nt" else ".sh"
COMMENT = "::" if os.name == "nt" else "#"
WARNING = f"{COMMENT} This file is generated by generate_aliases.py. Do not edit.\n"
SCRIPT_TEMPLATE = WARNING + "@echo off\n{command}" if os.name == "nt" else "#!/bin/bash\n{command}"
GENERATED_DIR = "generated"

def write_scripts(aliases):
    """Write script files for aliases."""
    for alias, command in aliases.items():
        # Add launch command if URL
        if command.startswith("http"):
            command = f"{LAUNCH_URL} {command}"
        # Write script file
        script_name = os.path.join(GENERATED_DIR, alias + SCRIPT_EXT)
        print(f"Creating {script_name} for '{alias}' : {command}")
        with open(script_name, "w") as script_file:
            script_file.write(SCRIPT_TEMPLATE.format(command=command))
        # Make script executable on Unix
        if os.name != "nt":
            os.chmod(script_name, 0o755)     
    
def main():
    """Create executable scripts for aliases."""
    # read aliases from YAML file
    with open("aliases.yml") as f:
        data = yaml.safe_load(f)
    # cross-platform aliases
    os.makedirs(GENERATED_DIR, exist_ok=True)
    write_scripts(data["all"])
    # platform-specific aliases
    if os.name == "nt":
        if "windows" in data:
            write_scripts(data["windows"])
    else:
        if "linux" in data:
            write_scripts(data["linux"])
    print(f"Please add '{os.path.abspath(GENERATED_DIR)}' to your PATH.")


if __name__ == "__main__":
    main()
